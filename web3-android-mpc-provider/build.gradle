plugins {
    id 'com.android.library'
    id 'maven-publish'
}

android {
    namespace 'com.web3auth.web3_android_mpc_provider'
    compileSdk 33

    defaultConfig {
        minSdk 24
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    //tss-client-android
    implementation 'com.github.grvgoel81:tss-client-android:0.0.8'
    //Web3j
    implementation 'org.web3j:core:4.9.5'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

task javadoc(type: Javadoc) {
    failOnError(false)
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    exclude '*R.java'
    exclude {
        it.file.path.contains('web3-android-mpc-provider')
    }
}

afterEvaluate {
    javadoc.classpath += files(android.libraryVariants.collect { variant ->
        variant.javaCompileProvider.get().classpath.files
    })

    publishing {
        publications {
            release(MavenPublication) {
                from components.release
            }
        }
    }
}